<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sAnalog</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 'Pressed' check variable
analogPressed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Track touch movement

joystick_max_dist = 8;
deadzone = 2;
dist_mouse =  point_distance(oAnalogBack.x,oAnalogBack.y,device_mouse_x(0),device_mouse_y(0));
dir = point_direction(oAnalogBack.x,oAnalogBack.y,device_mouse_x(0),device_mouse_y(0));

// sync location to special view (1)
x = view_xview[0] +  32;
y = view_yview[0] +  90;

// check if we have pressed touch analog nub exactaly
if device_mouse_check_button_pressed(0, mb_left) &amp;&amp; collision_point(device_mouse_x(0), device_mouse_y(0), oAnalogBack, true, true)
|| device_mouse_check_button_pressed(1, mb_left) &amp;&amp; collision_point(device_mouse_x(1), device_mouse_y(1), oAnalogBack, true, true){
    analogPressed = true;
}

if analogPressed &amp;&amp; device_mouse_check_button_released(0,mb_left){
    analogPressed = false;    
}

if analogPressed 
&amp;&amp; point_in_rectangle(mouse_x, mouse_y, view_xview[0]-10, view_yview[0], (view_xview[0] + (view_wview[0] - (view_wview[0]/3.2))), (view_yview[0] + view_hview[0])){
    if(dist_mouse &lt; joystick_max_dist){
        x = device_mouse_x(0);
        y = device_mouse_y(0);
    }else{
        x = oAnalogBack.x + lengthdir_x(joystick_max_dist, dir);
        y = oAnalogBack.y + lengthdir_y(joystick_max_dist, dir);
    }
}

if !global.touch{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
